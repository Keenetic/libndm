#ifndef __NDM_SRC_CHARSET_8859_6_H__
#define __NDM_SRC_CHARSET_8859_6_H__

/**
 * Automatically generated by @c convgen
 * from @c ./MAPPINGS/ISO8859/8859-6.TXT
 * Range merge code gap is 128.
 * See http://www.unicode.org/Public/MAPPINGS/ for
 * other charsets.
 **/

#include <assert.h>
#include <stddef.h>
#include <stdint.h>

static const uint16_t ISO_8859_6_000000A4_000000F2_TO_UNI_[] = {
	0x00a4, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800,
	0x060c, 0x00ad, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800,
	0xd800, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800, 0xd800, 0x061b,
	0xd800, 0xd800, 0xd800, 0x061f, 0xd800, 0x0621, 0x0622, 0x0623,
	0x0624, 0x0625, 0x0626, 0x0627, 0x0628, 0x0629, 0x062a, 0x062b,
	0x062c, 0x062d, 0x062e, 0x062f, 0x0630, 0x0631, 0x0632, 0x0633,
	0x0634, 0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063a, 0xd800,
	0xd800, 0xd800, 0xd800, 0xd800, 0x0640, 0x0641, 0x0642, 0x0643,
	0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649, 0x064a, 0x064b,
	0x064c, 0x064d, 0x064e, 0x064f, 0x0650, 0x0651, 0x0652
};

static inline long conv_8859_6_to_uni_(
		const uint8_t *const in,
		const size_t in_bytes,
		uint32_t *cp)
{
	assert (in_bytes > 0);

	const uint8_t b0 = *in;

	if (b0 <= 0xa0) {
		*cp = b0;

		return 1;
	}

	if (0xa4 <= b0 && b0 <= 0xf2) {
		const uint16_t code =
			ISO_8859_6_000000A4_000000F2_TO_UNI_[b0 - 0xa4];

		/* illegal code for this range */
		if (code == 0xd800) {
			return -1;
		}

		*cp = code;

		return 1;
	}

	return -1;
}

static const uint8_t UNI_000000A4_000000AD_TO_ISO_8859_6_[] = {
	0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xad
};

static const uint8_t UNI_0000060C_00000652_TO_ISO_8859_6_[] = {
	0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbb,
	0x00, 0x00, 0x00, 0xbf, 0x00, 0xc1, 0xc2, 0xc3,
	0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb,
	0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3,
	0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xe0, 0xe1, 0xe2, 0xe3,
	0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,
	0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2
};

static inline long conv_uni_to_8859_6_(
		uint32_t cp,
		uint8_t *out,
		const size_t out_bytes)
{
	if (out_bytes == 0) {
		return -1;
	}

	if (cp <= 0xa0) {
		*out = (uint8_t) cp;

		return 1;
	}

	if (0xa4 <= cp && cp <= 0xad) {
		const uint8_t code =
			UNI_000000A4_000000AD_TO_ISO_8859_6_[cp - 0xa4];

		/* illegal code for this range */
		if (code == 0x00) {
			return 0;
		}

		*out = code;

		return 1;
	}

	if (0x060c <= cp && cp <= 0x0652) {
		const uint8_t code =
			UNI_0000060C_00000652_TO_ISO_8859_6_[cp - 0x060c];

		/* illegal code for this range */
		if (code == 0x00) {
			return 0;
		}

		*out = code;

		return 1;
	}

	return 0;
}

#endif /* __NDM_SRC_CHARSET_8859_6_H__ */
